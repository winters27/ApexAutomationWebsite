<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <canvas id="particle-canvas" class="absolute inset-0 w-full h-full"></canvas>
  <div class="container mx-auto px-4 md:px-6 relative z-10 pt-20">
    <div class="max-w-4xl mx-auto text-center">
      <div class="mb-6">
        <h1 class="text-4xl md:text-6xl font-bold leading-tight pb-2 gradient-text animate-gradient-flow">
          Stop the Grind. <br class="hidden sm:block">
          Start Dominating.
        </h1>
      </div>
      <p class="text-xl md:text-2xl text-[#cccccc] mb-10 leading-relaxed">
        Apex Automation is your ultimate co-pilot for Call of Duty. Level up your rank, weapons, and battle pass
        effortlessly while you're AFK.
      </p>
      <div class="flex flex-col sm:flex-row items-center justify-center gap-4">
        <button
          onclick="scrollToPricing()"
          class="bg-white/5 backdrop-blur-md border border-[#5285a6] text-white hover:bg-white/10 hover:shadow-[0_0_30px_rgba(82,133,166,0.5)] transition-all duration-300 text-lg px-8 py-6 rounded-md w-full sm:w-auto"
        >
          Get Apex Automation Now
        </button>
        <a
          href="#features"
          class="flex items-center text-white hover:text-[#5285a6] transition-colors w-full sm:w-auto justify-center"
        >
          <span class="mr-2">See Features</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="6 9 12 15 18 9"></polyline>
          </svg>
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  // Particle animation
  document.addEventListener('DOMContentLoaded', function() {
    const canvas = document.getElementById('particle-canvas');
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    if (!ctx) return;

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];

    function createParticles() {
      const particleCount = Math.floor(window.innerWidth / 10);
      
      particles.length = 0; // Clear existing particles
      
      for (let i = 0; i < particleCount; i++) {
        particles.push({
          x: Math.random() * canvas.width,
          y: Math.random() * canvas.height,
          size: Math.random() * 2 + 0.5,
          speedX: (Math.random() - 0.5) * 0.5,
          speedY: (Math.random() - 0.5) * 0.5,
          color: `rgba(82, 133, 166, ${Math.random() * 0.5 + 0.1})`,
        });
      }
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      particles.forEach((particle) => {
        particle.x += particle.speedX;
        particle.y += particle.speedY;

        if (particle.x < 0 || particle.x > canvas.width || particle.y < 0 || particle.y > canvas.height) {
          if (Math.random() > 0.5) {
            particle.x = Math.random() * canvas.width;
            particle.y = Math.random() > 0.5 ? 0 : canvas.height;
          } else {
            particle.x = Math.random() > 0.5 ? 0 : canvas.width;
            particle.y = Math.random() * canvas.height;
          }
        }

        ctx.fillStyle = particle.color;
        ctx.beginPath();
        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
        ctx.fill();
      });

      requestAnimationFrame(animate);
    }

    function handleResize() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      createParticles();
    }

    createParticles();
    animate();

    window.addEventListener('resize', handleResize);
  });
  
  // Scroll to pricing function (also defined in navbar.njk but included here for completeness)
  function scrollToPricing() {
    const pricingSection = document.getElementById('pricing');
    if (pricingSection) {
      pricingSection.scrollIntoView({ behavior: 'smooth' });
    }
  }
</script>
